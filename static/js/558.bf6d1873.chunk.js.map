{"version":3,"file":"static/js/558.bf6d1873.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","redux/PhoneBookRedux/selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContactsData } from 'redux/PhoneBookRedux/operathion';\n\n\nexport const ContactForm = () => {\n    const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(state=> state.phonebook.items)\n  const dispatch = useDispatch();\n  const onSubmit = (event) =>{\n    event.preventDefault();\n    handleSubmit(name, number);\n    setName(\"\")\n    setNumber(\"\")\n  }\n\n\n  const handleSubmit = (name, number) => {\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(setContactsData({ name, number, id: nanoid() }));\n  }\n\n  const handleChengeName = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n\n    return (\n      <form onSubmit={onSubmit}>\n        <label>Name<br/><input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChengeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /></label>\n        <br/>\n        <label>Number<br/><input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChengeName}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        /></label>\n        <br/>\n        <button style={{\n          color:\"green\",\n          backgroundColor: \"gray\",\n        }} type=\"submit\">Add contact</button>\n      </form>\n    );\n}\n","export const getFilteredContacts = state => {\n    return state.phonebook.items.filter(item =>\n      item.name.toLowerCase().includes(state.filter.filter.toLowerCase())\n    );\n  };\n  export const getFilter = state => state.filter.filter;\n  ","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactsData } from 'redux/PhoneBookRedux/operathion';\nimport { getFilteredContacts } from 'redux/PhoneBookRedux/selector';\n\nexport const ContactList = () => {\nconst contacts = useSelector(getFilteredContacts);\nconst dispatch = useDispatch();\nconst handleDeleteUser = id => {\n  dispatch(deleteContactsData(id))\n};\n\n  return (\n    <ul style={{\n      listStyle: 'none',\n      fontSize:'20px',\n    }}>\n      {contacts.map(item => (\n        <li key={item.id}>\n          <p style={{\n      margin: '10 auto'\n    }}>{item.name}</p>\n          <p style={{\n      margin: '10 auto',\n    }}>{item.number}</p>\n          <button style={{\n          color:\"red\",\n          backgroundColor: \"gray\",\n        }} onClick={() => handleDeleteUser(item.id)} type=\"button\">Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterAction } from 'redux/PhoneBookRedux/FilterSlice';\nimport { getFilter } from 'redux/PhoneBookRedux/selector';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeName = event => {\n    dispatch(changeFilterAction(event.target.value))\n  };\n\n  return (\n    <div\n      style={{\n        textAlign: 'center',\n      }}\n    >\n      <p\n        style={{\n          fontSize: '20px',\n        }}\n      >\n        Find contacts by name\n      </p>\n      <label>\n        Filter\n        <br />\n        <input\n        value={filter}\n          type=\"text\"\n          name=\"filter\"\n          onChange={onChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n};\n\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { getContactsData } from 'redux/PhoneBookRedux/operathion';\n\nconst { useEffect } = require('react');\nconst { useDispatch } = require('react-redux');\n\n\nexport const Phonebook = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsData());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'nowrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n        flexDirection: 'column',\n        margin: '30px',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","phonebook","items","dispatch","useDispatch","handleSubmit","some","contact","alert","setContactsData","handleChengeName","event","target","value","onSubmit","preventDefault","type","onChange","pattern","title","required","style","color","backgroundColor","getFilteredContacts","filter","item","toLowerCase","includes","getFilter","ContactList","listStyle","fontSize","map","margin","onClick","deleteContactsData","Filter","textAlign","changeFilterAction","useEffect","require","Phonebook","getContactsData","display","flexWrap","justifyContent","alignItems","flexDirection"],"sourceRoot":""}